import sqlite3
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, filters
from telethon import TelegramClient
import datetime
import json

channels_list = ["@novosti_voinaa", 
                 "@truexanewsua", 
                 "@rian_ru", 
                 "@readovkanews", 
                 "@bbbreaking", 
                 "@ostorozhno_novosti", 
                 "@voynareal", 
                 "@wargonzo", 
                 "@nexta_live", 
                 "@meduzalive", 
                 "@pravdadirty", 
                 "@varlamov_news"]

with open("credentials.json" , 'r') as cr:
    data = json.load(cr)
    api_id = data["api_id"]
    api_hash = data["api_hash"]
parser = TelegramClient('anon', api_id, api_hash).start()
# bot_token = "5909054565:AAHilbEQT8IozDDmn7b4i_GkN4XE2FxHTrQ"

con = sqlite3.connect("dataset.sql")
cur = con.cursor()

cur.execute("DROP TABLE IF EXISTS posts")
cur.execute("CREATE TABLE posts(id INTEGER PRIMARY KEY AUTOINCREMENT, channel VARCHAR(16), text VARCHAR(4096), time VARCHAR(20))")
res = cur.execute("SELECT * FROM posts")
for row in res.fetchall():
    print(str(row))

for ch in channels_list:
     async for msg in 

# async def save_post(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     try:
#         print("Message received")
#         channel = update.message.forward_from_chat.username
#         text = ""
#         try:
#             text = update.message.text.replace("\n", "")  
#         except:
#             text = update.message.caption.replace("\n", "")  
        
#         time = str(update.message.date.year) + '-' + str(update.message.date.month) + '-' + str(update.message.date.day) + '-' + str(update.message.date.hour) + '-' + str(update.message.date.minute) + '-' + str(update.message.date.second)
#         # print("Date: " + time)
#         data = {"text": text}
#         res = cur.execute("SELECT * FROM posts WHERE text = :text", data)
#         if res.fetchmany() == [] and len(text) >= 100:
#             data = {"channel": channel, "text": text, "time" : time}
#             cur.execute("INSERT INTO posts (channel, text, time) VALUES (:channel, :text, :time)", data)
#             con.commit()

#             data = {"text": text}
#             res = cur.execute("SELECT * FROM posts WHERE text = :text", data)
#             print(res.fetchmany())

#         # res = cur.execute("SELECT * FROM posts")
#         # print(res.fetchall())
#         con.commit()

#     except Exception as e:
#         print("An error occurred: " + str(e))


# if __name__ == "__main__":
#     application = ApplicationBuilder().token(bot_token).build()
#     application.add_handler(MessageHandler(filters.ALL, save_post))
#     application.run_polling()